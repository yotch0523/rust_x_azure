name: Trigger auto deployment for aca-rust

on:
  push:
    branches: [main]

  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_CONTAINER_REGISTRY: yotchcontainer
  CONTAINER_NAME: samplerustapp
  CONTAINER_APP_NAME: aca-rust
  RESOURCE_GROUP: rg-rust-x-azure

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to container registry
        id: acrtoken
        uses: azure/CLI@v1
        with:
          inlineScript: |
            accessToken=$(az acr login -n ${{ env.AZURE_CONTAINER_REGISTRY }} --expose-token --query accessToken -o tsv)
            echo ::set-output name=token::$accessToken
      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: 00000000-0000-0000-0000-000000000000
          password: ${{ steps.acrtoken.outputs.token }}

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with: { command: generate-lockfile }

      - name: Build rust app
        run: cargo build --target-dir ./target --release

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
          file: ./Dockerfile
          context: ./

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update -n ${{ env.CONTAINER_APP_NAME }} -g ${{ env.RESOURCE_GROUP }} --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
